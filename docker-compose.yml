version: "3.9"
services:
  es01:
    container_name: "es01"
    image: "docker.elastic.co/elasticsearch/elasticsearch:${VERSION}"
    ports:
      - "9200:9200"                   # [docker host port]:[in container port]
      - "9201:9201"                   # [docker host port]:[in container port]
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esData:/usr/share/elasticsearch/data
      - esConfig:/usr/share/elasticsearch/config/
    networks:
      - elastic

  kibana:
    container_name: "Kibana"
    image: "docker.elastic.co/kibana/kibana:${VERSION}"
    ports:
      - "5601:5601"                   # [docker host port]:[in container port]
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
    volumes:
      - kibanaConfig:/usr/share/kibana/config
    networks:
      - elastic

  indexer-server:
    container_name: "Spring-indexer"
    environment:

      elastic_host: es01              # the elastic host ip

      elastic_port: '9200'            # the elastic host port

      kibana_host: kibana             # the kibana host ip

      kibana_port: '5601'             # the kibana host port

      ssl_connection: 'false'           # to use SSL (HTTPS) or not

      river_index: 'eeardf'           # the name of the index where the rivers are created

      indexer_multithreading: 'true'  # if you want multithreading; each river will have a single thread

      threads: 4                      # in case of multithreading, the max number of concurrent working threads

      log_level: "info"               # the log level (info or debug)

      cache_duration_in_seconds: 10   # number of second to cache dashboard data

    tty: true

    ports:
      - "8080:8080"                   # [docker host port]:[in container port]
    volumes:
      - indexerDB:/DB
    networks:
      - elastic
    build: .

volumes:
  esData:
    driver: local
  esConfig:
    driver: local
  kibanaConfig:
    driver: local
  indexerDB:
    driver: local

networks:
  elastic:
    driver: bridge